{"version":3,"sources":["EventsContext.js","components/TimeLine/NewsCard/NewsCard.js","components/TimeLine/TransactionsCard/TransactionsCard.js","components/TimeLine/TimeLine.js","components/AddEvent/AddEvent.js","components/NewsInfo/NewsInfo.js","components/TransactionsInfo/TransactionsInfo.js","components/MinNav/MinNav.js","App.js","serviceWorker.js","index.js"],"names":["EventsContext","React","createContext","EventsStore","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isLit","news","id","type","title","description","date","isChecked","transactions","currency","direction","sender","value","isDeleted","getEventsTypes","placeholder","label","options","getNews","getTransactions","updateNews","obj","newNews","setState","updateTransactions","newTransactions","addEvent","addNews","addTransactions","console","log","toConsumableArray","name","toggleLight","inherits","createClass","key","react_default","a","createElement","Provider","onToggleLight","props","children","Component","NewsCard","Link","to","className","TransactionsCard","TimeLineInside","sortDate","kek","tet","sortPriority","items","setSortRule","bind","assertThisInitialized","event","defineProperty","target","JSON","parse","_this2","sort","b","ai","bi","arr","split","brr","Date","itemsList","map","item","i","el","TimeLine_NewsCard_NewsCard","TimeLine_TransactionsCard_TransactionsCard","onChange","stringify","prevProps","prevState","TimeLine","src_EventsContext","Consumer","_ref","TimeLine_TimeLineInside","AddEventInside","eventsTypes","changeHandler","action","changeType","res","clearState","events","eventTypes","keys","push","currentEvent","inputs","n","yyyy","getFullYear","mm","getMonth","dd","getDate","option","cols","rows","onClick","AddEvent","AddEvent_AddEventInside","NewsInfoInside","isOpen","toggle","copy","assign","Fragment","NewsInfo","NewsInfo_NewsInfoInside","match","params","TransactionsInfoInside","TransactionsInfo","TransactionsInfo_TransactionsInfoInside","MinNav","App","components_MinNav_MinNav","react_media","query","maxWidth","matches","Switch","Route","exact","path","component","components_AddEvent_AddEvent","components_TimeLine_TimeLine","Boolean","window","location","hostname","ReactDOM","render","EventsContext_EventsStore","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c7d2e5e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EventsContext = React.createContext();\n\nexport class EventsStore extends React.Component {\n    state = {\n        isLit: false,\n        // news: [],\n        // transactions: [],\n        news: [\n            {\n                id: 0,\n                type: \"news\",\n                title: \"Аларм новость1\",\n                description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet architecto esse odit sapiente.',\n                date: \"2019-03-01\",\n                isChecked: false\n            },\n            {\n                id: 1,\n                type: \"news\",\n                title: \"Lorem ipsum!\",\n                description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur dolorem magnam officia sapiente voluptate voluptatibus!',\n                date: \"2019-03-10\",\n                isChecked: false\n            }\n        ],\n        transactions: [\n            {\n                id: 0,\n                currency: \"баксы\",\n                date: \"2019-03-10\",\n                description: \"Баксы от Коли\",\n                direction: \"income\",\n                sender: \"Коля\",\n                type: \"transactions\",\n                value: \"228\",\n                isDeleted: false\n            },\n            {\n                id: 1,\n                currency: \"евро\",\n                date: \"2019-04-10\",\n                description: \"описание от Васи\",\n                direction: \"debt\",\n                sender: \"Вася\",\n                type: \"transactions\",\n                value: \"300\",\n                isDeleted: false\n            },\n        ],\n    };\n\n    getEventsTypes = () =>{\n        return {\n            news: {\n                title: {type: 'text', placeholder: 'Шок! Британские ученые..', label: 'Заголовок'},\n                description: {type: 'textarea', placeholder: 'Что бы быстро и эффективно похудешь, нужно лишь...', label: 'Содержание'},\n                date: {type:'date', label: 'Дата'},\n            },\n            transactions: {\n                value: {type:'number', placeholder: '3.14', label: 'Сумма'},\n                currency: {type:'text', placeholder: 'Тут мог быть селектор', label: 'Валюта'},\n                sender:  {type:'text', placeholder: 'Емельян', label: 'Отправитель'},\n                description:  {type:'textarea', placeholder: 'some placeholder', label: 'Описание'},\n                direction:  {type:'select', options: [{label:'Расход', value:'debt'}, {label:'Приход', value: 'income'}] , label: 'Приход/расход'},\n                date: {type:'date',label: 'Дата'},\n            },\n        }\n    };\n\n    getNews = (id) =>{\n        // return'привет' ;\n        if (this.state.news.length > id){\n            return this.state.news[id];\n        }\n        return false;\n\n    };\n\n    getTransactions = (id) =>{\n        // return'привет' ;\n        if (this.state.transactions.length > id){\n            return this.state.transactions[id];\n        }\n        return false;\n\n    };\n\n    updateNews = (id, obj) =>{\n        let newNews = this.state.news;\n            newNews[id] = obj;\n\n        this.setState(() => ({ news: newNews }));\n    };\n\n    updateTransactions = (id, obj) =>{\n        let newTransactions = this.state.transactions;\n        newTransactions[id] = obj;\n\n        this.setState(() => ({ transactions: newTransactions }));\n    };\n\n    addEvent = (obj) => {\n        if (!obj.date){\n            obj.date = '1970-00-01';\n        }\n        switch (obj.type) {\n            case 'news':\n                this.addNews(obj);\n                break;\n            case 'transactions':\n                this.addTransactions(obj);\n                break;\n            default:\n                console.log('kek');\n        }\n\n\n    };\n\n    addNews = (obj) => {\n\n        obj.id=this.state.news.length;\n        obj.isChecked = false;\n\n        this.setState({\n            news: [\n                ...this.state.news,\n                obj\n            ]\n        });\n    };\n\n    addTransactions = (obj) => {\n        obj.id=this.state.transactions.length;\n        obj.isDeleted = false;\n        obj.name=`${this.state.transactions.length}Transactions`;\n\n        this.setState({\n            transactions: [\n                ...this.state.transactions,\n                obj\n            ]\n        });\n    };\n\n\n\n    toggleLight = () => {\n        console.log('newNote');\n        this.setState(state => ({ isLit: !state.isLit }));\n        let newNote ={\n            id: 1,\n            name: 'kek'\n        };\n        console.log(newNote);\n        // this.setState(state => ({ isLit: !state.isLit }));\n        // this.setState({\n        //     news: [\n        //         ...this.state.news,\n        //         newNote\n        //     ]\n        // })\n    };\n\n    render() {\n        // Pass down the state and the onToggleLight action\n        return (\n            <EventsContext.Provider\n                value={{\n                    isLit: this.state.isLit,\n                    onToggleLight: this.toggleLight,\n                    addEvent: this.addEvent,\n                    getEventsTypes: this.getEventsTypes,\n                    news: this.state.news,\n                    transactions: this.state.transactions,\n                    getNews: this.getNews,\n                    updateNews: this.updateNews,\n                    getTransactions: this.getTransactions,\n                    updateTransactions: this.updateTransactions\n\n                }}\n            >\n                {this.props.children}\n            </EventsContext.Provider>\n        );\n    }\n}\n\nexport default EventsContext;","import React from \"react\";\nimport './NewsCard.css';\nimport {Link} from \"react-router-dom\";\n\nconst NewsCard = (props) => (\n        <Link to={`/news/${props.news.id}`} className={`${props.className} news-card`}>\n            <div className={`news-card__header ${ !props.news.isChecked ? 'news-card__header--new' : ''}`}>\n                {props.news.title}\n            </div>\n        </Link>\n);\n\nexport default NewsCard;","import React from \"react\";\nimport './TransactionsCard.css'\nimport {Link} from \"react-router-dom\";\n\nconst TransactionsCard = (props) => (\n\n    props.transactions.isDeleted ? null :\n        <Link to={`/transactions/${props.transactions.id}`} className={`${props.className} transactions-card`}>\n            {/*<h6>Это Транзакция</h6>*/}\n            <div className=\"transactions-card__header\">\n                <div>\n                    {props.transactions.direction}\n                </div>\n                <div>\n                    <span\n                        className={props.transactions.direction === 'income'\n                            ? 'transactions-card__value--positive'\n                            : 'transactions-card__value--negative'}>\n                        {props.transactions.value}\n                    </span>\n                    {props.transactions.currency}\n\n                </div>\n            </div>\n            <div className=\"transactions-card__footer\">\n                <span>Отправитель: {props.transactions.sender}</span>\n                <span>{props.transactions.date}</span>\n            </div>\n       </Link>\n);\n\nexport default TransactionsCard;","import React from 'react';\nimport EventsContext from \"../../EventsContext\";\nimport NewsCard from \"./NewsCard/NewsCard\";\nimport TransactionsCard from \"./TransactionsCard/TransactionsCard\";\nimport './TimeLine.css';\n\n\nconst TimeLine = () => (\n    <EventsContext.Consumer>\n        {({ transactions, news }) => (\n            <TimeLineInside\n                transactions={transactions}\n                news={news}/>\n\n        )}\n    </EventsContext.Consumer>\n);\n\nclass TimeLineInside extends React.Component {\n    constructor( props ){\n        super( props );\n        this.state = {\n            sortDate: '0',\n            kek: { tet: this.sortDate},\n            sortPriority: {news: 1, transactions: 1},\n            items: this.props.news.concat(this.props.transactions),\n\n        };\n\n        this.setSortRule = this.setSortRule.bind(this);\n    }\n\n    setSortRule(event){\n        // console.log(event.);\n        this.setState({[event.target.id]: JSON.parse(event.target.value)});\n        // this.state[event.target.id]= event.target.value;\n        // this.sortItems();\n    }\n\n\n\n    render() {\n\n        let items = this.props.news.concat(this.props.transactions);\n\n        items.sort((a,b)=>{\n            let ai = this.state.sortPriority[a.type];\n            let bi = this.state.sortPriority[b.type];\n            if ( ai === bi){\n                let arr = a.date.split('-');\n                let brr = b.date.split('-');\n                let ad = new Date (arr[0], arr[1]-1, arr[2]);\n                let bd = new Date (brr[0], brr[1]-1, brr[2]);\n                return (ad - bd)* this.state.sortDate;\n            }\n            return ai-bi;\n        });\n\n        // const itemsList = items.map((item, i) =>{\n        const itemsList = items.map((item, i) =>{\n                let el;\n                switch (item.type) {\n                    case 'news':\n                        el = <NewsCard key={i} news={item} className={'time-line__card'}/>;\n                        break;\n                    case 'transactions':\n                        el = <TransactionsCard key={i} transactions={item} className={'time-line__card'}/>;\n                        break;\n                    default:\n                        el = null;\n                        break;\n                }\n                return el;\n            }\n        );\n\n        return (\n            <div className={'time-line'}>\n                <div className=\"time-line__setting\">\n                    <label className={'time-line__setting-label'}>\n                        Сортировка по дате:\n                        <select onChange={this.setSortRule} id={'sortDate'}>\n                            <option value={0}>no priority</option>\n                            <option value={-1}>Сначала новые</option>\n                            <option value={1}>Сначала старые</option>\n                        </select>\n                    </label>\n                    <label className={'time-line__setting-label'}>\n                        Сортировка по типу:\n                        <select onChange={this.setSortRule} id={'sortPriority'}>\n                            <option value={'{\"news\":1,\"transactions\":1}'}>no priority</option>\n                            <option value={JSON.stringify({news: 1, transactions: 2})} >news  transactions</option>\n                            <option value={JSON.stringify({news: 2, transactions: 1})}>transactions  news</option>\n                        </select>\n                    </label>\n\n                </div>\n                <div className=\"time-line__cards\">\n                    {itemsList}\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n\n    }\n    componentWillUpdate(prevProps, prevState){\n\n    }\n}\n\n\nexport default TimeLine;\n","import React from \"react\";\nimport EventsContext from \"../../EventsContext\";\nimport './AddEvent.css';\n\nconst AddEvent = () => (\n    <EventsContext.Consumer>\n        {({ transactions, news, addEvent, getEventsTypes }) => (\n            <AddEventInside\n                transactions={transactions}\n                news={news}\n                addEvent={addEvent}\n                getEventsTypes={getEventsTypes}\n            />\n        )}\n    </EventsContext.Consumer>\n);\n\nclass AddEventInside extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: \"news\",\n            eventsTypes: this.props.getEventsTypes(),\n        };\n\n        this.changeHandler = this.changeHandler.bind(this);\n        this.action = this.action.bind(this);\n        this.changeType = this.changeType.bind(this);\n    }\n\n    action() {\n        let res = {};\n        res.type = this.state.type;\n\n\n        for (let key in this.state.eventsTypes[this.state.type]) {\n            res[key] = this.state[key];\n        }\n\n        this.props.addEvent(res);\n        this.clearState();\n    }\n\n    clearState() {\n        for (let key in this.state.eventsTypes[this.state.type]) {\n            this.setState({ [key]: \"\" });\n        }\n    }\n\n    changeType(event) {\n        this.clearState();\n        this.setState({ type: event.target.value });\n    }\n\n    changeHandler(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    render() {\n        let events = this.state.eventsTypes;\n\n\n        let eventTypes = Object.keys(events);\n        let options = [];\n\n        for (let i = 0; i < eventTypes.length; i++) {\n            options.push(\n                <option value={eventTypes[i]} key={i}>\n                    {eventTypes[i]}\n                </option>\n            );\n        }\n\n        let currentEvent = events[this.state.type];\n\n        let inputs = [];\n\n        for (let key in currentEvent) {\n            // eslint-disable-next-line\n            this.state[key] = this.state[key] ? this.state[key] : \"\";\n\n            switch (currentEvent[key].type) {\n                case 'date':\n                    let n = new Date();\n                    let yyyy = n.getFullYear();\n                    let mm = n.getMonth()+1;\n                    mm = mm < 10 ? '0'+mm : mm;\n                    let dd = n.getDate();\n                    dd = dd < 10 ? '0'+dd : dd;\n                    // eslint-disable-next-line\n                    this.state[key] = this.state[key] ? this.state[key] : `${yyyy}-${mm}-${dd}`;\n                // eslint-disable-next-line\n                case 'number':\n                case 'text':\n                    inputs.push(\n                        <label key={`${this.state.type}/${key}`} className={'add-event__label'}>\n                            <span className=\"add-event__label-title\">{currentEvent[key].label}</span>\n                            <input\n                                className={'add-event__input'}\n                                onChange={this.changeHandler}\n                                key={`${key}/${this.state.type}`}\n                                id={key}\n                                type={currentEvent[key].type}\n                                value={this.state[key]}\n                                placeholder={currentEvent[key].placeholder}\n                            />\n                        </label>\n                    );\n                    break;\n\n                case 'select':\n                    // eslint-disable-next-line\n                    this.state[key] = this.state[key] ? this.state[key] : currentEvent[key].options[0].label;\n                    inputs.push(\n                        <label key={`${this.state.type}/${key}`} className={'add-event__label'}>\n                            <span className=\"add-event__label-title\">{currentEvent[key].label}</span>\n                            <select\n                                className={'add-event__input'}\n                                id={key}\n                                onChange={this.changeHandler}>\n                                    {currentEvent[key].options.map((option, i )=>{\n                                        return (<option key={i} value={option.value} >{option.label}</option>)\n                                    })}\n                            </select>\n                        </label>\n                    );\n                    break;\n\n                case 'textarea':\n                    inputs.push(\n                        <label key={`${this.state.type}/${key}`} className={'add-event__label'}>\n                            <span className=\"add-event__label-title\">{currentEvent[key].label}</span>\n                            <textarea className={'add-event__input add-event__input--textarea'}\n                                      onChange={this.changeHandler}\n                                      key={`${key}/${this.state.type}`}\n                                      id={key}\n                                      value={this.state[key]}\n                                      placeholder={currentEvent[key].placeholder}\n                                      cols=\"10\"\n                                      rows=\"5\"/>\n                        </label>\n                    );\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <div className={'add-event'}>\n                <h4 className={'add-event__headline'}>Добавить событие: {this.state.type}</h4>\n                <div className=\"add-event__toggle\">\n                    Изменить тип события <select onChange={this.changeType}>{options}</select>\n                </div>\n                <div className=\"add-event__inputs\">\n                    {inputs}\n                </div>\n                <button className={'add-event__action'} onClick={this.action}>Добавить</button>\n            </div>\n        );\n    }\n\n\n\n    componentDidMount() {\n    }\n}\n\nexport default AddEvent;\n","import React from \"react\";\nimport EventsContext from \"../../EventsContext\";\nimport './NewsInfo.css';\n\nconst NewsInfo = (props) => (\n    <EventsContext.Consumer>\n        {({ transactions, news,getNews,updateNews }) => (\n            <NewsInfoInside\n                id={props.match.params.id}\n                getNews={getNews}\n                updateNews={updateNews}/>\n\n        )}\n    </EventsContext.Consumer>\n);\n\nclass NewsInfoInside extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            isOpen: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n\n    toggle(){\n        let obj = this.props.getNews(this.props.id);\n        let copy = Object.assign({}, obj);\n        copy.isChecked = !copy.isChecked;\n\n        this.props.updateNews(this.props.id, copy);\n\n    }\n\n    render() {\n\n        let a = this.props.getNews(this.props.id);\n\n        return(\n                <div className={`news-card--info`}>\n                    { a ?\n                        (\n                            <React.Fragment>\n                                <div className=\"news-card__header\">\n                                    <div className=\"news-card__header-title\">\n                                        Заголовок: {a.title}\n                                    </div>\n                                    <div className=\"news-card__header-action\">\n                                        <button onClick={this.toggle}>{a.isChecked ? 'Не ознакомлен' : 'Ознакомлен'}</button>\n                                    </div>\n                                </div>\n                                <div className=\"news-card__body\">\n                                    <div className=\"new-card__body-label\">\n                                        <div className=\"news-card__body-title\">\n                                            Описание:\n                                        </div>\n                                        <div className=\"news-card__body-date\">\n                                            {a.date}\n                                        </div>\n                                    </div>\n                                    <div className=\"news-card__body-description\">\n                                        {a.description}\n                                    </div>\n                                </div>\n                            </React.Fragment>\n                        ):\n                        (\n                            <div>\n                                <p>Новость не найдена, удалена или еще не создана. =С</p>\n                            </div>\n                        )\n\n                    }\n                </div>\n        )\n    }\n}\n\nexport default NewsInfo;","import React from \"react\";\nimport EventsContext from \"../../EventsContext\";\nimport './TransactionsInfo.css';\n\nconst TransactionsInfo = (props) => (\n    <EventsContext.Consumer>\n        {({ getTransactions,updateTransactions }) => (\n            <TransactionsInfoInside\n                id={props.match.params.id}\n                getTransactions={getTransactions}\n                updateTransactions={updateTransactions}/>\n\n        )}\n    </EventsContext.Consumer>\n);\n\nclass TransactionsInfoInside extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            isOpen: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n\n    toggle(){\n        let obj = this.props.getTransactions(this.props.id);\n        let copy = Object.assign({}, obj);\n        copy.isDeleted = true;\n\n        this.props.updateTransactions(this.props.id, copy);\n\n    }\n\n    render() {\n\n        let a = this.props.getTransactions(this.props.id);\n\n        return(\n            <div className={`transactions-card--info`}>\n                { a && !a.isDeleted ?\n                    (\n                        <React.Fragment>\n                            <div className=\"transactions-card__header\">\n                                <div className=\"transactions-card__header-title\">\n                                    {a.direction ===\"income\" ? 'Приход: ': 'Расход: '} {a.value} {a.currency}\n                                </div>\n                                <div className=\"transactions-card__header-action\">\n                                    <button onClick={this.toggle}>Удалить</button>\n                                </div>\n\n                            </div>\n                            <div className={'transactions-card__subtitle'}>\n                                <span>От кого транзакция: {a.sender}</span>\n                                <span className={'transactions-card__date'}>{a.date}</span>\n                            </div>\n                            <div className=\"transactions-card__body\">\n                                <div className=\"transactions-card__body-label\">\n                                    <div className=\"transactions-card__body-title\">\n                                        Описание:\n                                    </div>\n                                </div>\n                                <div className=\"transactions-card__body-description\">\n                                    {a.description}\n                                </div>\n                            </div>\n                        </React.Fragment>\n                    ):\n                    (\n                        <div>\n                            <p>Транзакция не найдена, удалена или еще не создана. =С</p>\n                        </div>\n                    )\n\n                }\n            </div>\n        )\n    }\n}\n\nexport default TransactionsInfo;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './MinNav.css';\n\nconst MinNav = () => (\n    <div className={'mini-navigator'}>\n        <Link to={'/add'}>Добавить событие</Link>\n        <Link to={'/list'}>Вернуться к списку</Link>\n    </div>\n);\n\nexport default MinNav;","import React, { Component } from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport TimeLine from \"./components/TimeLine/TimeLine\";\nimport AddEvent from \"./components/AddEvent/AddEvent\"\nimport NewsInfo from \"./components/NewsInfo/NewsInfo\";\nimport TransactionsInfo from \"./components/TransactionsInfo/TransactionsInfo\";\nimport MinNav from \"./components/MinNav/MinNav\";\nimport Media from 'react-media';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n          <MinNav/>\n          <div className=\"app__add-and-info\">\n              <Media query={{ maxWidth: 599 }}>\n                  {matches =>\n                      matches ? (\n                          <Switch>\n                              <Route exact path='/add' component={AddEvent}/>\n                          </Switch>\n                      ) : (\n                          <AddEvent/>\n                      )\n                  }\n              </Media>\n              <div className=\"app__info\">\n                  <Switch>\n                      <Route exact path='/news/:id' component={NewsInfo}/>\n                      <Route exact path='/transactions/:id' component={TransactionsInfo}/>\n                  </Switch>\n              </div>\n          </div>\n          <Media query={{ maxWidth: 599 }}>\n              {matches =>\n                  matches ? (\n                      <Switch>\n                          <Route exact path='/list' component={TimeLine}/>\n                      </Switch>\n                  ) : (\n                      <TimeLine/>\n                  )\n              }\n          </Media>\n\n          {/*<TimeLine/>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport {EventsStore} from \"./EventsContext\";\n\n\nReactDOM.render(<EventsStore><BrowserRouter><App /></BrowserRouter></EventsStore>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}